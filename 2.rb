# Project Euler Problem 2

# Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
# By starting with 1 and 2, the first 10 terms will be:
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# By considering the terms in the Fibonacci sequence whose values do not exceed 
# four million, find the sum of the even-valued terms.

@fibonacci = [nil, 1, 1]

def fibo(number)
  return 1 if number == 1 or number == 2
  return @fibonacci[number] if @fibonacci[number]
  @fibonacci[number] = fibo(number-1) + fibo(number-2)
  @fibonacci[number]
end

sum = 0
num = 1
loop do
  sum += fibo(num) if fibo(num).even?
  break if fibo(num) > 4000000
  num += 1
end

p sum # => 4613732